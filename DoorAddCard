/*
PINOUT:
RC522 MODULE    Uno/Nano     MEGA
SDA             D10          D9
SCK             D13          D52
MOSI            D11          D51
MISO            D12          D50
IRQ             N/A          N/A
GND             GND          GND
RST             D9           D8
3.3V            3.3V         3.3V
*/
/* Include the standard Arduino SPI library */
#include <SPI.h>
#include<Servo.h>
/* Include the RFID library */
#include <RFID.h>

/* Define the DIO used for the SDA (SS) and RST (reset) pins. */
#define SDA_DIO 9
#define RESET_DIO 8
/* Create an instance of the RFID library */
RFID RC522(SDA_DIO, RESET_DIO); 
Servo servo;
typedef struct { 
  String NAME;
  String serial_number;
} cardDictionary;
cardDictionary myDictionary[100];
cardDictionary* myDictionaryPt = &myDictionary[0];
int numberofkeys = 1;
int numloop2 = 0;
void setup()
{ 
  Serial.begin(9600);
  /* Enable the SPI interface */
  SPI.begin(); 
  /* Initialise the RFID reader */
  RC522.init();
  
Serial.println("Please Scan a Registered KeyCard");
  servo.attach(7);
  myDictionaryPt->NAME="key 1";
  myDictionaryPt->serial_number="4861425120";
  
}

void loop()
{
  
//if keycheck = true

if (RC522.isCard()){
for (int i = 0; i<numberofkeys; i++){
  RC522.readCardSerial();
  String card = "";
  for(int i=0;i<5;i++)
    {
      card+=RC522.serNum[i];
    }
    
  if (card ==(myDictionaryPt+i)->serial_number){
    Serial.println("2");
    String newcard = "";
    newcard = RC522.readCardSerial();
    Serial.println(card.equals(newcard));
    numberofkeys ++;
    Serial.println("a");
    if (numloop2==0){
    
    while (newcard.equals(card));
    Serial.println("Please Scan the Card You Want to Add");
    RC522.readCardSerial();
    numloop2++;
    Serial.println("3");
    }
    RC522.readCardSerial();
    Serial.println(card);
    Serial.println("4");
    for(int i=0;i<5;i++)
    {
      card+=RC522.serNum[i];
    }
    (myDictionaryPt + numberofkeys)->serial_number == card;
    //enter the name of new key, "x"
    //(myDictionary + numberofkeys)->NAME=x;
    
  }
  
  }
  
}}

